{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-02-02T13:33:55.971Z",
    "end": "2025-02-02T13:34:22.828Z",
    "duration": 26857,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "17e23649-09b7-4ec0-968a-3d9f0cf698bd",
      "title": "",
      "fullFile": "cypress\\e2e\\registrationTest.cy.js",
      "file": "cypress\\e2e\\registrationTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c8045f4-bfdf-46b6-9056-8372a11fa7b7",
          "title": "Reggestration Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register a user successfully with valid details",
              "fullTitle": "Reggestration Test should register a user successfully with valid details",
              "timedOut": null,
              "duration": 9946,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = _testData.default.validRegistration;\n_RegistrationPage.default.fillFirstName(data.firstName);\n_RegistrationPage.default.fillLastName(data.lastName);\n_RegistrationPage.default.fillEmail(data.email);\n_RegistrationPage.default.fillReenterEmail(data.reenterEmail);\n_RegistrationPage.default.fillUsername(data.username);\n_RegistrationPage.default.fillPassword(data.password);\n_RegistrationPage.default.getfillBirthdate(data.birthdate);\n_RegistrationPage.default.selectGender(data.gender);\n_RegistrationPage.default.confirmTermsAndConditions();\n_RegistrationPage.default.clickCreateAccount();\n_RegistrationPage.default.assertSuccessMessage(data.successMessage);",
              "err": {},
              "uuid": "5076d3fb-acbd-49b8-a9e2-546bb83b56cb",
              "parentUUID": "9c8045f4-bfdf-46b6-9056-8372a11fa7b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show username taken",
              "fullTitle": "Reggestration Test it should show username taken",
              "timedOut": null,
              "duration": 5675,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = _testData.default.usernameTaken;\n_RegistrationPage.default.fillFirstName(data.firstName);\n_RegistrationPage.default.fillLastName(data.lastName);\n_RegistrationPage.default.fillEmail(data.email);\n_RegistrationPage.default.fillReenterEmail(data.reenterEmail);\n_RegistrationPage.default.fillUsername(data.username);\n_RegistrationPage.default.fillPassword(data.password);\n_RegistrationPage.default.getfillBirthdate(data.birthdate);\n_RegistrationPage.default.selectGender(data.gender);\n_RegistrationPage.default.confirmTermsAndConditions();\n_RegistrationPage.default.clickCreateAccount();\n_RegistrationPage.default.assertErrorMessage(data.errorMessage);",
              "err": {},
              "uuid": "b3648652-553f-40eb-b072-f0e878356026",
              "parentUUID": "9c8045f4-bfdf-46b6-9056-8372a11fa7b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display password too short error",
              "fullTitle": "Reggestration Test should display password too short error",
              "timedOut": null,
              "duration": 5458,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = _testData.default.shortPassword;\n_RegistrationPage.default.fillFirstName(data.firstName);\n_RegistrationPage.default.fillLastName(data.lastName);\n_RegistrationPage.default.fillEmail(data.email);\n_RegistrationPage.default.fillReenterEmail(data.reenterEmail);\n_RegistrationPage.default.fillUsername(data.username);\n_RegistrationPage.default.fillPassword(data.password);\n_RegistrationPage.default.getfillBirthdate(data.birthdate);\n_RegistrationPage.default.selectGender(data.gender);\n_RegistrationPage.default.confirmTermsAndConditions();\n_RegistrationPage.default.clickCreateAccount();\n_RegistrationPage.default.assertErrorMessage(data.errorMessage);",
              "err": {},
              "uuid": "8fd8b8d9-acb3-4fc7-a55e-7129a56ea06b",
              "parentUUID": "9c8045f4-bfdf-46b6-9056-8372a11fa7b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display terms not agreed error",
              "fullTitle": "Reggestration Test should display terms not agreed error",
              "timedOut": null,
              "duration": 5376,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const data = _testData.default.termsNotAgreed;\n_RegistrationPage.default.fillFirstName(data.firstName);\n_RegistrationPage.default.fillLastName(data.lastName);\n_RegistrationPage.default.fillEmail(data.email);\n_RegistrationPage.default.fillReenterEmail(data.reenterEmail);\n_RegistrationPage.default.fillUsername(data.username);\n_RegistrationPage.default.fillPassword(data.password);\n_RegistrationPage.default.getfillBirthdate(data.birthdate);\n_RegistrationPage.default.selectGender(data.gender);\n// Not agreeing to terms\n_RegistrationPage.default.clickCreateAccount();\n_RegistrationPage.default.assertErrorMessage(data.errorMessage);",
              "err": {},
              "uuid": "631490e5-e98f-4438-a160-42f4637b5464",
              "parentUUID": "9c8045f4-bfdf-46b6-9056-8372a11fa7b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5076d3fb-acbd-49b8-a9e2-546bb83b56cb",
            "b3648652-553f-40eb-b072-f0e878356026",
            "8fd8b8d9-acb3-4fc7-a55e-7129a56ea06b",
            "631490e5-e98f-4438-a160-42f4637b5464"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26455,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss",
        "embeddedScreenshots": true,
        "setupNodeEvents": "[Function setupNodeEvents]",
        "defaultCommandTimeout": 20000,
        "requestTimeout": 30000,
        "pageLoadTimeout": 60000
      },
      "version": "6.2.0"
    }
  }
}